<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib" 
                    xmlns:local="clr-namespace:JkWpfControlLibStyles.Styles">

    <StreamGeometry x:Key="IconData">F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z</StreamGeometry>
    <Thickness x:Key="CheckBoxBorderThickness">2</Thickness>
    <sys:Double x:Key="CheckBoxWidth">20</sys:Double>
    <sys:Double x:Key="CheckBoxHeight">20</sys:Double>
    <!--<SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>-->
    <!--<SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>-->
    <!--<SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>-->
    <!--<SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>-->
    <!--<SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>-->
    <!--<SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>-->
    <!--<SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>-->
    <!--<SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>-->
    <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
    <!--<SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>-->
    <!--<SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>-->
    <!--<SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>-->

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="22,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}"/>
        <Setter Property="Background" Value="{DynamicResource CheckBoxBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource CheckBoxBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource CheckBoxForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" Width="{DynamicResource CheckBoxWidth}" Height="{DynamicResource CheckBoxWidth}" BorderThickness="{DynamicResource CheckBoxBorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" CornerRadius="2">
                            <Grid x:Name="markGrid">
                                <Path x:Name="optionMark" Data="{DynamicResource IconData}" Fill="{DynamicResource CheckBoxIconrBrush}" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0" Stretch="None"/>
                                <Rectangle x:Name="indeterminateMark" Fill="{DynamicResource CheckBoxIconrBrush}" Margin="4" Opacity="0"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{DynamicResource OptionMarkFocusVisual}"/>
                            <Setter Property="Padding" Value="4,1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{DynamicResource CheckBoxHoverBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{DynamicResource CheckBoxHoverBorderBrush}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{DynamicResource CheckBoxHoverIconBrush}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{DynamicResource CheckBoxHoverIconBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{DynamicResource CheckBoxDisabledBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{DynamicResource CheckBoxDisabledBorderBrush}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{DynamicResource CheckBoxDisabledIconBrush}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{DynamicResource CheckBoxDisabledIconBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{DynamicResource CheckBoxPressedBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{DynamicResource CheckBoxPressedBorderBrush}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{DynamicResource CheckBoxPressedIconBrush}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{DynamicResource CheckBoxPressedIconBrush}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{DynamicResource CheckBoxBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{DynamicResource CheckBoxBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{DynamicResource CheckBoxUncheckedBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{DynamicResource CheckBoxUncheckedBorderBrush}"/>
                            <Setter Property="Margin" TargetName="markGrid" Value="5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>